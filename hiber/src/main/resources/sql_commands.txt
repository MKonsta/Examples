CREATE TABLE HIBERNATE_DEVELOPERS(
   ID serial primary key,
   FIRST_NAME VARCHAR(50) DEFAULT NULL,
   LAST_NAME VARCHAR(50) DEFAULT NULL,
   SPECIALTY VARCHAR(50) DEFAULT NULL,
   EXPERIENCE INT DEFAULT NULL
);


create table customers
(
	id serial primary key not null,
	first_name varchar(50) not null,
	email varchar(50) not null,
	adress varchar(50) default null,
	city varchar(50) default null,
	state varchar(50) default null,
	zip_code varchar(50) default null
);

insert into customers (first_name, email, adress, city, state, zip_code)
values
('Fred', 'dfer@mail', 'Vash 54', 'New York', 'Vashington', '32'),
('Enrique', 'dfer@mail', 'Lenelo 7', 'LosPeppes', 'Los angeles', '5'),
('Freddy', 'dfer@mail', 'Wood 69', 'Kanzas', 'Texas', '18'),
('Arnold', 'dfer@mail', 'Cows 80', 'DeadWood', 'Montana', '2'),
('Devid', 'dfer@mail', 'Kapucinov 47', 'MountainWood', 'Alabama', '40');


create table orders
(
id serial primary key not null,
customer_id int references customers(id) not null,
orders_date date default current_timestamp
);

insert into orders (customer_id)
values
(2),
(4),
(5);

create table products
(
	id serial primary key not null,
	name varchar(30) not null,
	price int not null
);

insert into products (name, price)
values
('Milk', 35),
('Chees', 150),
('Bread', 13),
('Shugar', 40);

create table order_products
(
	id serial primary key,
	order_id int references orders(id),
	product_id int references products(id)
);

insert into order_products (order_id, product_id)
values
(1, 4),
(1, 3),
(2, 1),
(2, 3),
(2, 4),
(3, 3),
(3, 1),
(3, 4);



create table cities
(
	id serial primary key not null,
	name varchar(30) not null
);

insert into cities (name)
values
('Berlin'),
('Hamburg'),
('Drezden'),
('Leipzig');

create table people
(
	id serial primary key not null,
	first_name varchar(30) not null,
	last_name varchar(30) not null,
	city_id int default null
);

insert into people (first_name, last_name, city_id)
values
('Felix', 'Baum', 4),
('Karl', 'Richter', null),
('Nils', 'Frank', 3),
('Dominik', 'Lange', 6);

--Inner Join
select * from people join cities on people.city_id = cities.id;

--Left join
select
	*
from
	people
left join
	cities on
	people.city_id = cities.id;

--Right join
select
	*
from
	people
right join
	cities on
	people.city_id = cities.id;

--Full join
select
	*
from
	people
full join
	cities on
	people.city_id = cities.id;

--Full join
select
	*
from
	people
cross join
	cities;

select
	order_products.order_id,
	products.price
from
	order_products
join
	products
	on order_products.product_id = products.id;


select
	customers.first_name,
	order_products.order_id,
	products.name,
	products.price
from customers
join orders	on customers.id = orders.customer_id
join order_products on orders.id = order_products.order_id
join products on products.id = order_products.product_id;

select
	customers.first_name,
	products.name
from customers
join orders on orders.id = customers.id
join order_products on order_products.order_id = orders.id
join products on products.id = order_products.product_id;





select
	order_products.order_id,
	sum(products.price)
from
	order_products
join
	products
	on order_products.product_id = products.id
group by order_products.order_id;


create table marks (
id serial primary key,
name varchar(30)
);

insert into marks (name)
values
('Mersedes'),
('Audi'),
('Honda'),
('Toyota'),
('Bmw');

create table cars (
id serial primary key,
mark_id int references marks(id),
model varchar(30),
num int
);

insert into cars (mark_id, model, num)
values
(1, 'benz', 5),
(1, 'gelentvagen', 2),
(1, 'ML', 1),
(2, 'seledka', 1),
(1, 'A-class', 3),
(3, 'Stream', 8),
(3, 'StepWagon', 13),
(5, 'X5', 2),
(5, 'X6', 1),
(5, 'Akula', 4),
(4, 'Windom', 18),
(4, 'est', 6),
(4, 'camry', 0);

select cars.id, marks.name, cars.model, cars.num
from cars
join marks on marks.id = cars.mark_id;

select marks.name, sum(cars.num) as summ
from cars
join marks on marks.id = cars.mark_id
group by marks.name
having sum(cars.num) > 2;

select marks.name, sum(cars.num) as summ
from cars
join marks on marks.id = cars.mark_id
group by marks.name
having marks.name = 'Bmw';
